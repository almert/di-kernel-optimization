#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Fri Jan  5 13:35:17 2018

@author: merta
"""

import numpy as np
from scipy.stats import cauchy
from sklearn.base import BaseEstimator

class RandomFourier(BaseEstimator):
    def __init__(self,n_dims=1000,kernel='rbf',gamma=0.01):
        self.J = n_dims;
        self.kernel = kernel;
        self.gamma = gamma;
        
    def fit(self,X):
        M = np.shape(X)[1];
        if self.kernel == 'rbf':
            self.W = np.sqrt(2*self.gamma)*np.random.normal(size=(M,self.J));
        elif self.kernel == 'laplacian':
            self.W = cauchy.rvs(scale=self.gamma,size=(M,self.J));
        else:
            print('Kernel type \''+str(self.kernel)+'\' is not supported!');
            return self;
        self.b = np.random.uniform(low=.0,high=2*np.pi,size=(self.J));
        return self;
        
    def transform(self,X):
        return np.sqrt(2./self.J)*np.cos(X.dot(self.W)+self.b);
        
